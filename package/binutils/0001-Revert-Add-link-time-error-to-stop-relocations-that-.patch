From 2b130fc5d246221de9ca56379b78c9e26ebbe1cb Mon Sep 17 00:00:00 2001
From: Alexey Brodkin <abrodkin@synopsys.com>
Date: Wed, 19 Mar 2014 18:34:40 +0400
Subject: [PATCH] Revert "Add link-time error to stop relocations that can't be
  resolved from ending up in shared libraries."

This reverts commit 9bec5f85523329b957af895387cc9fe315bbc7f4.

Signed-off-by: Alexey Brodkin <abrodkin@synopsys.com>
---
 bfd/elf32-arc.c | 34 +++-------------------------------
 1 file changed, 3 insertions(+), 31 deletions(-)

diff --git a/bfd/elf32-arc.c b/bfd/elf32-arc.c
index 1bd242a..9ecee1f 100644
--- a/bfd/elf32-arc.c
+++ b/bfd/elf32-arc.c
@@ -1597,7 +1597,6 @@ elf_arc_check_relocs (bfd *abfd,
   asection *sgot;
   asection *srelgot;
   asection *sreloc;
-  Elf_Internal_Sym *isym;
 
   if (info->relocatable)
     return TRUE;
@@ -1622,17 +1621,9 @@ elf_arc_check_relocs (bfd *abfd,
       r_symndx = ELF32_R_SYM (rel->r_info);
 
       if (r_symndx < symtab_hdr->sh_info)
-	{
-	  h = NULL;
-	  isym = bfd_sym_from_r_symndx(
-	       &elf_ARC_hash_table (info)->sym_cache,
-	       abfd, r_symndx);
-	}
+	h = NULL;
       else
-	{
-	  h = sym_hashes[r_symndx - symtab_hdr->sh_info];
-	  isym = NULL;
-	}
+	h = sym_hashes[r_symndx - symtab_hdr->sh_info];
 
       /* Some relocs require a global offset table.  */
       if (dynobj == NULL)
@@ -1772,26 +1763,6 @@ elf_arc_check_relocs (bfd *abfd,
 
 	case R_ARC_32:
 	case R_ARC_32_ME:
-	  /* During shared library creation, these relocs should not appear in
-	     a shared library (as memory will be read only and the dynamic
-	     linker can not resolve these. However the error should not occur
-	     for e.g. debugging or non-readonly sections. */
-	  if (info->shared && (sec->flags & SEC_ALLOC) != 0
-	      && (sec->flags & SEC_READONLY) != 0)
-	    {
-	      const char *name;
-	      if (h)
-		name = h->root.root.string;
-	      else
-		name = bfd_elf_sym_name (abfd, symtab_hdr, isym, NULL);
-	      (*_bfd_error_handler)
-		(_("%B: relocation %s against `%s' can not be used when making a shared object; recompile with -fPIC"),
-		 abfd, arc_elf_calculate_howto_index(
-		   ELF32_R_TYPE (rel->r_info))->name, name);
-	      bfd_set_error (bfd_error_bad_value);
-	      return FALSE;
-	    }
-	  /* FALLTHROUGH */
 	case R_ARC_PC32:
 	  /* If we are creating a shared library, and this is a reloc
 	     against a global symbol, or a non PC relative reloc
@@ -1848,6 +1819,7 @@ elf_arc_check_relocs (bfd *abfd,
 		    {
 		      asection *s;
 		      void *vpp;
+		      Elf_Internal_Sym *isym;
 
 		      isym = bfd_sym_from_r_symndx(
 			   &elf_ARC_hash_table (info)->sym_cache,
-- 
1.8.5.3

